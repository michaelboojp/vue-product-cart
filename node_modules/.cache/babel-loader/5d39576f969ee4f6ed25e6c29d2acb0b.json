{"ast":null,"code":"export default {\n  props: ['toggle', 'cart', 'inventory', 'remove'],\n  methods: {\n    getPrice(name) {\n      const product = this.inventory.find(p => {\n        return p.name === name;\n      });\n      return product.price.USD;\n    },\n\n    calculateTotal() {\n      const total = Object.entries(this.cart).reduce((acc, curr, index) => {\n        return acc + curr[1] * this.getPrice(curr[0]);\n      }, 0);\n      return total.toFixed(2);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2DA,eAAe;AACbA,OAAK,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,WAAnB,EAAgC,QAAhC,CADM;AAEbC,SAAO,EAAE;AACPC,YAAO,CAAGC,IAAH,EAAS;AACd,YAAMC,OAAM,GAAI,KAAKC,SAAL,CAAeC,IAAf,CAAqBC,CAAD,IAAO;AACzC,eAAOA,CAAC,CAACJ,IAAF,KAAWA,IAAlB;AACD,OAFe,CAAhB;AAGA,aAAOC,OAAO,CAACI,KAAR,CAAcC,GAArB;AACD,KANM;;AAOPC,kBAAa,GAAK;AAChB,YAAMC,KAAI,GAAIC,MAAM,CAACC,OAAP,CAAe,KAAKC,IAApB,EAA0BC,MAA1B,CAAiC,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,KAAsB;AACnE,eAAOF,GAAE,GAAKC,IAAI,CAAC,CAAD,CAAJ,GAAU,KAAKf,QAAL,CAAce,IAAI,CAAC,CAAD,CAAlB,CAAxB;AACD,OAFa,EAEX,CAFW,CAAd;AAGA,aAAON,KAAK,CAACQ,OAAN,CAAc,CAAd,CAAP;AACF;;AAZO;AAFI,CAAf","names":["props","methods","getPrice","name","product","inventory","find","p","price","USD","calculateTotal","total","Object","entries","cart","reduce","acc","curr","index","toFixed"],"sourceRoot":"","sources":["/Users/zhaorigetu.bao/vue_wp_01/product-and-cart/src/components/SidebarComponent.vue"],"sourcesContent":["<template>\n  <aside class=\"cart-container\">\n    <div class=\"cart\">\n      <h1 class=\"cart-title spread\">\n        <span>\n          Cart\n          <i class=\"icofont-cart-alt icofont-1x\"></i>\n        </span>\n        <button @click=\"toggle()\" class=\"cart-close\">&times;</button>\n      </h1>\n\n      <div class=\"cart-body\">\n        <table class=\"cart-table\">\n          <thead>\n            <tr>\n              <th>\n                <span class=\"sr-only\">Product Image</span>\n              </th>\n              <th>Product</th>\n              <th>Price</th>\n              <th>Qty</th>\n              <th>Total</th>\n              <th>\n                <span class=\"sr-only\">Actions</span>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(quantity, key, i) in cart\" :key=\"i\">\n              <td>\n                <i class=\"icofont-carrot icofont-3x\"></i>\n              </td>\n              <td>{{ key }}</td>\n              <td>${{ getPrice(key) }}</td>\n              <td class=\"center\">{{ key }}</td>\n              <td>${{ (quantity * getPrice(key)).toFixed(2) }}</td>\n              <td class=\"center\">\n                <button @click=\"remove(key)\" class=\"btn btn-light cart-remove\">&times;</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <p v-if=\"!Object.keys(cart).length\" class=\"center\">\n          <em>No items in cart</em>\n        </p>\n        <div class=\"spread\">\n          <span>\n            <strong>Total:</strong>\n            \\${{ calculateTotal() }}\n          </span>\n          <button class=\"btn btn-light\">Checkout</button>\n        </div>\n      </div>\n    </div>\n  </aside>\n</template>\n\n<script>\nexport default {\n  props: ['toggle', 'cart', 'inventory', 'remove'],\n  methods: {\n    getPrice (name) {\n      const product = this.inventory.find((p) => {\n        return p.name === name\n      })\n      return product.price.USD\n    },\n    calculateTotal () {\n      const total = Object.entries(this.cart).reduce((acc, curr, index) => {\n        return acc + (curr[1] * this.getPrice(curr[0]))\n      }, 0)\n      return total.toFixed(2)\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}